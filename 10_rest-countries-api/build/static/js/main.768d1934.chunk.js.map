{"version":3,"sources":["connections/Reducer.js","components/Wrapper.js","components/ToggleTheme.js","components/Header.js","components/functions/formatNumbers.js","components/functions/stringToSlug.js","components/Country.js","components/SkeletonCard.js","components/CountryList.js","components/Input.js","components/Search.js","components/FilterRegion.js","components/ActionList.js","components/Button.js","components/CountrySelected.js","components/CountryPage.js","App.js","serviceWorker.js","index.js"],"names":["filterByRegion","list","region","filter","country","filterByName","name","toLowerCase","includes","WrapperStyled","styled","div","Wrapper","children","ToggleThemeStyled","label","ToggleTheme","ref","useRef","useState","btnIcon","setBtnIcon","btnText","setBtnText","evaluateTheme","mq","matches","current","click","checked","useEffect","window","matchMedia","addListener","type","id","onChange","document","body","setAttribute","removeAttribute","HeaderStyled","Header","className","to","formatNumber","num","toString","replace","convertToSlug","Text","CountryStyled","Country","flag","population","capital","alpha3Code","history","useHistory","onClick","push","stringToSlug","loading","src","alt","formatNumbers","DivStyled","SkeletonCard","height","count","CountryListStyled","ErrorMessage","p","CountryList","dispatch","useDispatch","useSelector","state","fullCountryList","countryList","countriesLoading","setCountriesLoading","countriesError","setCountriesError","coutryFilteredList","fetch","then","response","json","payload","catch","error","console","log","length","map","item","key","InputStyled","Input","props","placeholder","SearchStyled","Search","inputValue","ev","target","value","FilterRegionStyled","FilterRegion","dropdown","setDropdown","onRegionChange","selectEvent","regionSelected","ActionListStyled","ActionList","ButtonStyled","button","Button","icon","text","handleClick","CountrySelectedStyled","CountrySelected","nativeName","subregion","topLevelDomain","currencies","languages","borders","bordersList","setBordersList","updateCountry","countrySelected","countryName","findCountryByName","innerHTML","countryBordersCodes","index","data-item-set","CountryPageStyled","CountryPage","match","countryCode","params","DBcountry","find","setCountry","goBack","store","createStore","action","filterText","countryFilteredList","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.768d1934.chunk.js","sourcesContent":["function filterByRegion(list, region) {\r\n  return list.filter((country) => country.region === region || region === \"\");\r\n}\r\nfunction filterByName(list, name) {\r\n  return list.filter((country) =>\r\n    country.name.toLowerCase().includes(name.toLowerCase())\r\n  );\r\n}\r\n\r\nexport default function reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"SET_COUNTRY_LIST\": {\r\n      let filterByRegion = \"\";\r\n      let filterByName = \"\";\r\n      return {\r\n        ...state,\r\n        countryList: action.payload,\r\n        filterByRegion,\r\n        filterByName,\r\n      };\r\n    }\r\n\r\n    case \"SET_COUNTRY_BY_NAME\": {\r\n      let list = state.countryList;\r\n      const filterText = action.payload.toLowerCase();\r\n\r\n      if (filterText === \"\" && state.filterByRegion === \"\") {\r\n        return { ...state, countryFilteredList: [], filterByName: \"\" };\r\n      }\r\n      if (state.filterByRegion !== \"\") {\r\n        list = filterByRegion(list, state.filterByRegion);\r\n      }\r\n      const coutryFilteredList = filterByName(list, filterText);\r\n\r\n      return {\r\n        ...state,\r\n        coutryFilteredList,\r\n        filterByName: filterText,\r\n      };\r\n    }\r\n\r\n    case \"FILTER_BY_REGION\": {\r\n      const regionSelected = action.payload;\r\n\r\n      if (regionSelected === \"\") {\r\n        return { ...state, coutryFilteredList: [], filterByRegion: \"\" };\r\n      }\r\n      let coutryFilteredList = filterByRegion(\r\n        state.countryList,\r\n        regionSelected\r\n      );\r\n      if (state.filterByName !== \"\") {\r\n        coutryFilteredList = filterByName(\r\n          coutryFilteredList,\r\n          state.filterByName\r\n        );\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        coutryFilteredList,\r\n        filterByRegion: regionSelected,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst WrapperStyled = styled.div`\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nfunction Wrapper({ children }) {\r\n  return <WrapperStyled>{children}</WrapperStyled>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ToggleThemeStyled = styled.label`\r\n  background-color: transparent;\r\n  border: none;\r\n  padding: 1rem;\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  font-family: var(--detail-page-body);\r\n  text-transform: capitalize;\r\n  color: var(--cl-text);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: 0.3s ease;\r\n  border-radius: 0.5rem;\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    background-color: var(--cl-background);\r\n  }\r\n\r\n  input {\r\n    display: none;\r\n    position: absolute;\r\n    top: -1rem;\r\n    left: -1rem;\r\n    width: 0px;\r\n    height: 0px;\r\n  }\r\n\r\n  ion-icon {\r\n    font-size: 1.25rem;\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nfunction ToggleTheme() {\r\n  const ref = useRef();\r\n  const [btnIcon, setBtnIcon] = useState(\"moon-outline\");\r\n  const [btnText, setBtnText] = useState(\"Dark mode\");\r\n\r\n  function handleChange() {\r\n    if (ref.current.checked) {\r\n      document.body.setAttribute(\"data-theme\", \"dark\");\r\n      setBtnText(\"Light mode\");\r\n      setBtnIcon(\"sunny-outline\");\r\n    } else {\r\n      document.body.removeAttribute(\"data-theme\", \"dark\");\r\n      setBtnText(\"Dark mode\");\r\n      setBtnIcon(\"moon-outline\");\r\n    }\r\n  }\r\n\r\n  function evaluateTheme(mq) {\r\n    if (mq.matches) ref.current.click();\r\n    if (!mq.matches && ref.current.checked) ref.current.click();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const mq = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n    mq.addListener(evaluateTheme);\r\n    evaluateTheme(mq);\r\n  }, []);\r\n\r\n  return (\r\n    <ToggleThemeStyled>\r\n      <ion-icon name={btnIcon}></ion-icon>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"toggle-theme\"\r\n        onChange={handleChange}\r\n        ref={ref}\r\n      />\r\n      <span>{btnText}</span>\r\n    </ToggleThemeStyled>\r\n  );\r\n}\r\n\r\nexport default ToggleTheme;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Wrapper from \"./Wrapper\";\r\nimport ToggleTheme from \"./ToggleTheme\";\r\n\r\nconst HeaderStyled = styled.div`\r\n  background-color: var(--cl-elements);\r\n  box-shadow: 0px 4px 12px 0px hsla(200, 15%, 8%, 0.08);\r\n  padding: 1.5rem 0;\r\n\r\n  .header-content {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 2rem;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 1.2rem;\r\n    font-weight: 700;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: var(--cl-text);\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    h1 {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    .header-content {\r\n      padding: 0 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <HeaderStyled>\r\n      <Wrapper>\r\n        <div className=\"header-content\">\r\n          <Link to=\"/\">\r\n            <h1>Where in the world?</h1>\r\n          </Link>\r\n          <ToggleTheme />\r\n        </div>\r\n      </Wrapper>\r\n    </HeaderStyled>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default function formatNumber(num) {\r\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n}\r\n","export default function convertToSlug(Text) {\r\n  return Text.toLowerCase()\r\n    .replace(/ /g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\");\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport formatNumbers from \"./functions/formatNumbers\";\r\nimport stringToSlug from \"./functions/stringToSlug\";\r\n\r\nconst CountryStyled = styled.div`\r\n  border-radius: 0.5rem;\r\n  background-color: var(--cl-elements);\r\n  box-shadow: 0px 4px 12px 0px hsla(200, 15%, 8%, 0.04);\r\n  cursor: pointer;\r\n  transition: 0.3s ease;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 4px 16px 0px hsla(200, 15%, 8%, 0.08);\r\n  }\r\n\r\n  .country-flag {\r\n    overflow: hidden;\r\n    border-radius: 0.5rem 0.5rem 0 0;\r\n    img {\r\n      width: 100%;\r\n      height: 15rem;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n\r\n  .country-info {\r\n    padding: 1.5rem;\r\n    h2 {\r\n      font-size: 1.25rem;\r\n      margin-bottom: 1rem;\r\n      font-weight: 700;\r\n    }\r\n    p {\r\n      margin-bottom: 0.5rem;\r\n\r\n      strong {\r\n        font-weight: 600;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .country-flag {\r\n      img {\r\n        height: 12rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Country({ flag, name, population, region, capital, alpha3Code }) {\r\n  const history = useHistory();\r\n  function handleClick() {\r\n    history.push(`/country/${stringToSlug(name)}/${alpha3Code}`);\r\n  }\r\n  return (\r\n    <CountryStyled onClick={handleClick}>\r\n      <div className=\"country-flag\">\r\n        <img loading=\"lazy\" src={flag} alt={`${name} flag`} />\r\n      </div>\r\n      <div className=\"country-info\">\r\n        <h2>{name}</h2>\r\n        <p>\r\n          <strong>Population:</strong> {`${formatNumbers(population)}`}\r\n        </p>\r\n        <p>\r\n          <strong>Region:</strong> {region}\r\n        </p>\r\n        <p>\r\n          <strong>Capital:</strong> {capital}\r\n        </p>\r\n      </div>\r\n    </CountryStyled>\r\n  );\r\n}\r\n\r\nexport default Country;\r\n","import React from \"react\";\r\nimport Skeleton from \"react-skeleton-loading\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DivStyled = styled.div`\r\n  border-radius: 0.5rem;\r\n  background-color: var(--cl-elements);\r\n  box-shadow: 0px 4px 12px 0px hsla(200, 15%, 8%, 0.04);\r\n  cursor: pointer;\r\n  transition: 0.3s ease;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 4px 16px 0px hsla(200, 15%, 8%, 0.08);\r\n  }\r\n\r\n  .country-flag {\r\n    overflow: hidden;\r\n    border-radius: 0.5rem 0.5rem 0 0;\r\n    span {\r\n      border-radius: 0;\r\n      line-height: initial;\r\n    }\r\n  }\r\n\r\n  .country-info {\r\n    padding: 1.5rem;\r\n    span {\r\n      margin-bottom: 0.5rem !important;\r\n    }\r\n    span:first-of-type {\r\n      margin-bottom: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SkeletonCard = () => {\r\n  return (\r\n    <DivStyled>\r\n      <div className=\"country-flag\">\r\n        <Skeleton height={180} />\r\n      </div>\r\n      <div className=\"country-info\">\r\n        <Skeleton height={30} className=\"skeleton-h2\" />\r\n        <Skeleton count={3} className=\"skeleton-p\" />\r\n      </div>\r\n    </DivStyled>\r\n  );\r\n};\r\n\r\nexport default SkeletonCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Wrapper from \"./Wrapper\";\r\nimport Country from \"./Country\";\r\nimport SkeletonCard from \"./SkeletonCard\";\r\n\r\nconst CountryListStyled = styled.div`\r\n  padding: 0 4rem;\r\n  display: grid;\r\n  justify-content: flex-start;\r\n  grid-template-columns: repeat(auto-fill, minmax(16rem, 1fr));\r\n  grid-gap: 3rem;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 0 2rem;\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.p`\r\n  padding: 0 2rem;\r\n  text-align: center;\r\n  color: var(--cl-input);\r\n  font-size: 1.2rem;\r\n  transition: 0.3s ease;\r\n  margin: 2rem 0;\r\n\r\n  a {\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    transition: 0.3s ease;\r\n\r\n    &:hover {\r\n      color: var(--cl-text);\r\n    }\r\n  }\r\n`;\r\n\r\nfunction CountryList() {\r\n  const dispatch = useDispatch();\r\n  const filterByName = useSelector((state) => state.filterByName);\r\n  const fullCountryList = useSelector((state) => state.countryList);\r\n  const [countriesLoading, setCountriesLoading] = useState(true);\r\n  const [countriesError, setCountriesError] = useState(false);\r\n\r\n  const countryList = useSelector((state) => {\r\n    if (state.filterByRegion !== \"\" || state.filterByName !== \"\") {\r\n      return state.coutryFilteredList;\r\n    }\r\n    return state.countryList;\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.eu/rest/v2/all\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((list) => {\r\n        dispatch({\r\n          type: \"SET_COUNTRY_LIST\",\r\n          payload: list,\r\n        });\r\n        setCountriesLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setCountriesError(true);\r\n        setCountriesLoading(false);\r\n      });\r\n  }, [dispatch]);\r\n\r\n  const clearFilter = () => {\r\n    dispatch({\r\n      type: \"SET_COUNTRY_LIST\",\r\n      payload: fullCountryList,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {countriesError && countryList.length === 0 && (\r\n        <ErrorMessage>\r\n          We're experiencing problems with the country list, please try again\r\n          later. Thanks!\r\n        </ErrorMessage>\r\n      )}\r\n      {countryList.length === 0 && filterByName !== \"\" && (\r\n        <ErrorMessage>\r\n          No countries match the filters, let's{\" \"}\r\n          <a onClick={clearFilter}>start again</a>\r\n        </ErrorMessage>\r\n      )}\r\n      <CountryListStyled>\r\n        {countriesLoading &&\r\n          [1, 2, 3, 4, 5, 6, 7, 8].map((item) => <SkeletonCard />)}\r\n        {!countriesLoading &&\r\n          countryList.map(\r\n            ({ flag, name, population, region, capital, alpha3Code }) => {\r\n              return (\r\n                <Country\r\n                  key={alpha3Code}\r\n                  flag={flag}\r\n                  name={name}\r\n                  population={population}\r\n                  region={region}\r\n                  capital={capital}\r\n                  alpha3Code={alpha3Code}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n      </CountryListStyled>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default CountryList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InputStyled = styled.label`\r\n  box-shadow: 0px 4px 12px 0px hsla(200, 15%, 8%, 0.08);\r\n  display: flex;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n  background-color: var(--cl-elements);\r\n\r\n  ion-icon {\r\n    font-size: 1.5rem;\r\n    color: var(--cl-input);\r\n    padding: 0 2rem;\r\n  }\r\n\r\n  input {\r\n    border: none;\r\n    padding: 1.5rem 1rem 1.5rem 0;\r\n    font-family: var(--base-font-family);\r\n    color: var(--cl-input);\r\n    flex: 1;\r\n    background-color: transparent;\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nfunction Input({ ...props }) {\r\n  return (\r\n    <InputStyled>\r\n      <ion-icon name=\"search-outline\"></ion-icon>\r\n      <input type=\"text\" placeholder=\"Search for a country...\" {...props} />\r\n    </InputStyled>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Input from \"./Input\";\r\n\r\nconst SearchStyled = styled.div`\r\n  position: relative;\r\n\r\n  .clear-button {\r\n    position: absolute;\r\n    right: 1rem;\r\n    top: 2.1rem;\r\n    transform: translateY(-50%);\r\n    background-color: transparent;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    padding: 0.5rem;\r\n    transition: 0.3s ease;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    border-radius: 2rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    &:hover {\r\n      background-color: var(--cl-background);\r\n      transform: translateY(-50%) rotate(90deg);\r\n    }\r\n\r\n    ion-icon {\r\n      font-size: 1.5rem;\r\n      color: var(--cl-input);\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 50rem;\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 35rem;\r\n  }\r\n`;\r\n\r\nfunction Search() {\r\n  const inputValue = useSelector((state) => state.filterByName);\r\n  const dispatch = useDispatch();\r\n\r\n  const filterByName = (ev) => {\r\n    dispatch({\r\n      type: \"SET_COUNTRY_BY_NAME\",\r\n      payload: ev.target.value,\r\n    });\r\n  };\r\n\r\n  const clearInput = () => {\r\n    dispatch({\r\n      type: \"SET_COUNTRY_BY_NAME\",\r\n      payload: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SearchStyled>\r\n      {inputValue && (\r\n        <button className=\"clear-button\" onClick={clearInput}>\r\n          <ion-icon name=\"close-outline\"></ion-icon>\r\n        </button>\r\n      )}\r\n      <Input onChange={filterByName} value={inputValue} />\r\n    </SearchStyled>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst FilterRegionStyled = styled.div`\r\n  .dropdown {\r\n    border-radius: 0.5rem;\r\n    background-color: var(--cl-elements);\r\n    box-shadow: 0px 4px 12px 0px hsla(200, 15%, 8%, 0.08);\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n    padding: 1.5rem;\r\n    position: relative;\r\n    color: var(--cl-input);\r\n  }\r\n  .dropdown ion-icon {\r\n    margin-left: 1rem;\r\n    color: var(--cl-input);\r\n    position: absolute;\r\n    top: 1.8rem;\r\n    right: 2rem;\r\n  }\r\n  .dropdown.open ion-icon {\r\n    transform: rotate(180deg);\r\n  }\r\n  .dropdown ul {\r\n    margin-top: 0.5rem;\r\n    border-radius: 0.5rem;\r\n    background-color: var(--cl-elements);\r\n    box-shadow: 0px 4px 12px 0px hsla(200, 15%, 8%, 0.08);\r\n    padding: 0.5rem;\r\n    text-align: left;\r\n    position: absolute;\r\n    top: 0%;\r\n    left: 0;\r\n    list-style-type: none;\r\n    width: 100%;\r\n    z-index: -1;\r\n    opacity: 0;\r\n    height: 0px;\r\n    overflow: hidden;\r\n  }\r\n  .dropdown.open ul {\r\n    opacity: 1;\r\n    top: 100%;\r\n    z-index: 99;\r\n    height: 14.5rem;\r\n  }\r\n  .dropdown.open ul.reset-filter {\r\n    height: 16.8rem;\r\n  }\r\n  .dropdown.open ul.reset-filter::before {\r\n    content: \"\";\r\n    background-color: var(--cl-background);\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 3.5rem;\r\n    transition: 0.3s ease;\r\n  }\r\n  .dropdown ul li {\r\n    margin: 0.25rem 0;\r\n    padding: 0.5rem 1rem;\r\n    position: relative;\r\n    z-index: 5;\r\n\r\n    &:hover {\r\n      color: var(--cl-text);\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 20rem;\r\n    margin-left: auto;\r\n  }\r\n`;\r\n\r\nfunction FilterRegion() {\r\n  const dispatch = useDispatch();\r\n  const [dropdown, setDropdown] = useState(false);\r\n  const filterByRegion = useSelector((state) => state.filterByRegion);\r\n\r\n  const onRegionChange = (selectEvent) => {\r\n    dispatch({\r\n      type: \"FILTER_BY_REGION\",\r\n      payload: selectEvent,\r\n    });\r\n  };\r\n\r\n  function filterByRegionAction(ev) {\r\n    const regionSelected = ev.target.value;\r\n    dispatch({\r\n      type: \"FILTER_BY_REGION\",\r\n      payload: regionSelected,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <FilterRegionStyled onChange={filterByRegionAction}>\r\n      <div\r\n        className={`dropdown ${dropdown ? \"open\" : \"\"}`}\r\n        onClick={() => setDropdown(!dropdown)}\r\n      >\r\n        Filter by Region {filterByRegion && `( ${filterByRegion} )`}\r\n        <ion-icon name=\"chevron-down-outline\"></ion-icon>\r\n        <ul className={filterByRegion && \"reset-filter\"}>\r\n          <li onClick={() => onRegionChange(\"Africa\")}>Africa</li>\r\n          <li onClick={() => onRegionChange(\"Americas\")}>Americas</li>\r\n          <li onClick={() => onRegionChange(\"Asia\")}>Asia</li>\r\n          <li onClick={() => onRegionChange(\"Europe\")}>Europe</li>\r\n          <li onClick={() => onRegionChange(\"Oceania\")}>Oceania</li>\r\n          {filterByRegion && (\r\n            <li onClick={() => onRegionChange(\"\")}>Reset filter</li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </FilterRegionStyled>\r\n  );\r\n}\r\n\r\nexport default FilterRegion;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Wrapper from \"./Wrapper\";\r\nimport Search from \"./Search\";\r\nimport FilterRegion from \"./FilterRegion\";\r\n\r\nconst ActionListStyled = styled.div`\r\n  padding: 3rem 2rem;\r\n  .grid {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 2rem;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .grid {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ActionList() {\r\n  return (\r\n    <Wrapper>\r\n      <ActionListStyled>\r\n        <div className=\"grid\">\r\n          <Search />\r\n          <FilterRegion />\r\n        </div>\r\n      </ActionListStyled>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default ActionList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonStyled = styled.button`\r\n  padding: 0.75rem 1.5rem;\r\n  box-shadow: 0px 4px 12px 0px hsla(200, 15%, 8%, 0.08);\r\n  border: none;\r\n  background-color: var(--cl-elements);\r\n  border-radius: 0.25rem;\r\n  transition: 0.3s ease;\r\n  text-transform: capitalize;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-family: var(--base-font-family);\r\n  color: var(--cl-text);\r\n\r\n  &:hover {\r\n    background-color: var(--cl-background);\r\n  }\r\n\r\n  ion-icon {\r\n    font-size: 1.2rem;\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nfunction Button({ icon = \"\", text, handleClick }) {\r\n  return (\r\n    <ButtonStyled onClick={handleClick}>\r\n      {icon && <ion-icon name={icon}></ion-icon>}\r\n      {text}\r\n    </ButtonStyled>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport formatNumbers from \"./functions/formatNumbers\";\r\n\r\nimport Button from \"./Button\";\r\n\r\nconst CountrySelectedStyled = styled.div`\r\n  .grid {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 2rem;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  h2 {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  p {\r\n    margin-bottom: 0.75rem;\r\n    strong {\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  h3 {\r\n    font-weight: 600;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  .borders {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    grid-gap: 1rem;\r\n  }\r\n\r\n  img {\r\n    max-width: 100%;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0px 4px 12px 0px hsla(200, 15%, 8%, 0.04);\r\n    margin: 2rem auto;\r\n  }\r\n\r\n  .items {\r\n    span {\r\n      margin-right: 5px;\r\n      &:after {\r\n        content: \",\";\r\n      }\r\n      &:last-child {\r\n        &:after {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 3rem;\r\n    .grid {\r\n      grid-template-columns: 1fr;\r\n    }\r\n    .country-info {\r\n      padding: 2rem 0;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    align-items: center;\r\n    grid-gap: 6rem;\r\n    .grid {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction CountrySelected({\r\n  flag,\r\n  name,\r\n  nativeName,\r\n  population,\r\n  region,\r\n  subregion,\r\n  capital,\r\n  topLevelDomain,\r\n  currencies = [],\r\n  languages = [],\r\n  borders = [],\r\n  alpha3Code,\r\n  handleClick,\r\n}) {\r\n  const countryList = useSelector((state) => state.countryList);\r\n  const [bordersList, setBordersList] = useState([]);\r\n\r\n  function findBorders(countryBordersCodes) {\r\n    if (countryBordersCodes.length === 0) return [];\r\n    const list = countryList.filter((item) =>\r\n      countryBordersCodes.includes(item.alpha3Code)\r\n    );\r\n    return list;\r\n  }\r\n\r\n  function findCountryByName(countryName) {\r\n    if (countryName === \"\") return null;\r\n    const [country] = countryList.filter((item) =>\r\n      item.name.toLowerCase().includes(countryName.toLowerCase())\r\n    );\r\n    return country;\r\n  }\r\n\r\n  function updateCountry(ev) {\r\n    const countrySelected = findCountryByName(ev.target.innerHTML);\r\n    handleClick(countrySelected);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setBordersList(findBorders(borders));\r\n  }, [borders]);\r\n\r\n  return (\r\n    <CountrySelectedStyled>\r\n      <img src={flag} alt={`${name} flag`} />\r\n      <div className=\"country-info\">\r\n        <h2>{name}</h2>\r\n        <div className=\"grid\">\r\n          <div>\r\n            <p>\r\n              <strong>Native Name:</strong> {nativeName}\r\n            </p>\r\n            <p>\r\n              <strong>Population:</strong>{\" \"}\r\n              {`${population ? formatNumbers(population) : population}`}\r\n            </p>\r\n            <p>\r\n              <strong>Region:</strong> {region}\r\n            </p>\r\n            <p>\r\n              <strong>Sub Region:</strong> {subregion}\r\n            </p>\r\n            <p>\r\n              <strong>Capital:</strong> {capital}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <p>\r\n              <strong>Top Level Domain:</strong> {topLevelDomain}\r\n            </p>\r\n            <p className=\"items\">\r\n              <strong>Currencies:</strong>{\" \"}\r\n              {currencies.map((item, index) => (\r\n                <span key={index}>{item.name}</span>\r\n              ))}\r\n            </p>\r\n            <p className=\"items\">\r\n              <strong>Languages:</strong>{\" \"}\r\n              {languages.map((item, index) => (\r\n                <span key={index}>{item.name}</span>\r\n              ))}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {bordersList.length !== 0 && (\r\n          <>\r\n            <h3>Border Countries:</h3>\r\n            <div className=\"borders\">\r\n              {bordersList.map((item, index) => (\r\n                <Button\r\n                  text={item.name}\r\n                  key={index}\r\n                  handleClick={updateCountry}\r\n                  data-item-set={item.alpha3Code}\r\n                />\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </CountrySelectedStyled>\r\n  );\r\n}\r\n\r\nexport default CountrySelected;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Wrapper from \"./Wrapper\";\r\nimport Button from \"./Button\";\r\nimport CountrySelected from \"./CountrySelected\";\r\n\r\nimport stringToSlug from \"./functions/stringToSlug\";\r\n\r\nconst CountryPageStyled = styled.div`\r\n  padding: 2rem;\r\n`;\r\n\r\nfunction CountryPage({ match, history }) {\r\n  const { countryCode } = match.params;\r\n  let DBcountry = useSelector((state) =>\r\n    state.countryList.find((item) => item.alpha3Code === countryCode)\r\n  );\r\n  const [country, setCountry] = useState(DBcountry);\r\n\r\n  useEffect(() => {\r\n    if (!country || country.alpha3Code !== match.params.countryCode) {\r\n      fetch(\"https://restcountries.eu/rest/v2/alpha/\" + countryCode)\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((country) => {\r\n          setCountry(country);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [match, countryCode]);\r\n\r\n  function handleClick() {\r\n    history.goBack();\r\n  }\r\n\r\n  function updateCountry(countrySelected) {\r\n    setCountry(countrySelected);\r\n    history.push(\r\n      `/country/${stringToSlug(countrySelected.name)}/${\r\n        countrySelected.alpha3Code\r\n      }`\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <CountryPageStyled>\r\n        <div className=\"navigation\">\r\n          <Button\r\n            handleClick={handleClick}\r\n            icon=\"arrow-back-outline\"\r\n            text=\"back\"\r\n          />\r\n        </div>\r\n        <CountrySelected {...country} handleClick={updateCountry} />\r\n      </CountryPageStyled>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default CountryPage;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport reducer from \"./connections/Reducer\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport CountryList from \"./components/CountryList\";\r\nimport ActionList from \"./components/ActionList\";\r\nimport CountryPage from \"./components/CountryPage\";\r\n\r\nconst initialState = {\r\n  countryList: [],\r\n  coutryFilteredList: [],\r\n  filterByRegion: \"\",\r\n  filterByName: \"\",\r\n};\r\n\r\nconst store = createStore(reducer, initialState);\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <ActionList />\r\n              <CountryList />\r\n            </Route>\r\n            <Route path=\"/country/:slug/:countryCode\" component={CountryPage} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}