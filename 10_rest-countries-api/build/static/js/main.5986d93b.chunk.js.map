{"version":3,"sources":["connections/Reducer.js","components/Wrapper.js","components/ToggleTheme.js","components/Header.js","components/functions/formatNumbers.js","components/functions/stringToSlug.js","components/Country.js","components/CountryList.js","components/Input.js","components/Search.js","components/FilterRegion.js","components/ActionList.js","components/Button.js","components/CountrySelected.js","components/CountryPage.js","App.js","serviceWorker.js","index.js"],"names":["filterByRegion","list","region","filter","country","filterByName","name","toLowerCase","includes","WrapperStyled","styled","div","Wrapper","children","ToggleThemeStyled","label","ToggleTheme","ref","useRef","useState","btnIcon","setBtnIcon","btnText","setBtnText","evaluateTheme","mq","matches","current","click","checked","useEffect","window","matchMedia","addListener","type","id","onChange","document","body","setAttribute","removeAttribute","HeaderStyled","Header","className","to","formatNumber","num","toString","replace","convertToSlug","Text","CountryStyled","Country","flag","population","capital","alpha3Code","history","useHistory","onClick","push","stringToSlug","loading","src","alt","formatNumbers","CountryListStyled","CountryList","dispatch","useDispatch","countryList","useSelector","state","coutryFilteredList","fetch","then","response","json","payload","catch","error","console","log","map","key","InputStyled","Input","props","placeholder","SearchStyled","Search","inputValue","setInputValue","ev","target","value","FilterRegionStyled","FilterRegion","dropdown","setDropdown","onRegionChange","selectEvent","regionSelected","ActionListStyled","ActionList","ButtonStyled","button","Button","icon","text","handleClick","CountrySelectedStyled","CountrySelected","nativeName","subregion","topLevelDomain","currencies","languages","borders","bordersList","setBordersList","updateCountry","countrySelected","countryName","item","findCountryByName","innerHTML","countryBordersCodes","length","index","data-item-set","CountryPageStyled","CountryPage","match","countryCode","params","DBcountry","find","setCountry","goBack","store","createStore","action","filterText","countryFilteredList","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5986d93b.chunk.js","sourcesContent":["function filterByRegion(list, region) {\r\n  return list.filter((country) => country.region === region || region === \"\");\r\n}\r\nfunction filterByName(list, name) {\r\n  return list.filter((country) =>\r\n    country.name.toLowerCase().includes(name.toLowerCase())\r\n  );\r\n}\r\n\r\nexport default function reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"SET_COUNTRY_LIST\": {\r\n      return { ...state, countryList: action.payload };\r\n    }\r\n\r\n    case \"SET_COUNTRY_BY_NAME\": {\r\n      let list = state.countryList;\r\n      const filterText = action.payload.toLowerCase();\r\n\r\n      if (filterText === \"\" && state.filterByRegion === \"\") {\r\n        return { ...state, countryFilteredList: [], filterByName: \"\" };\r\n      }\r\n      if (state.filterByRegion !== \"\") {\r\n        list = filterByRegion(list, state.filterByRegion);\r\n      }\r\n      const coutryFilteredList = filterByName(list, filterText);\r\n\r\n      return {\r\n        ...state,\r\n        coutryFilteredList,\r\n        filterByName: filterText,\r\n      };\r\n    }\r\n\r\n    case \"FILTER_BY_REGION\": {\r\n      const regionSelected = action.payload;\r\n\r\n      if (regionSelected === \"\") {\r\n        return { ...state, coutryFilteredList: [], filterByRegion: \"\" };\r\n      }\r\n      let coutryFilteredList = filterByRegion(\r\n        state.countryList,\r\n        regionSelected\r\n      );\r\n      if (state.filterByName !== \"\") {\r\n        coutryFilteredList = filterByName(\r\n          coutryFilteredList,\r\n          state.filterByName\r\n        );\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        coutryFilteredList,\r\n        filterByRegion: regionSelected,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst WrapperStyled = styled.div`\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nfunction Wrapper({ children }) {\r\n  return <WrapperStyled>{children}</WrapperStyled>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ToggleThemeStyled = styled.label`\r\n  background-color: transparent;\r\n  border: none;\r\n  padding: 1rem;\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  font-family: var(--detail-page-body);\r\n  text-transform: capitalize;\r\n  color: var(--cl-text);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: 0.3s ease;\r\n  border-radius: 0.5rem;\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    background-color: var(--cl-background);\r\n  }\r\n\r\n  input {\r\n    display: none;\r\n    position: absolute;\r\n    top: -1rem;\r\n    left: -1rem;\r\n    width: 0px;\r\n    height: 0px;\r\n  }\r\n\r\n  ion-icon {\r\n    font-size: 1.25rem;\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nfunction ToggleTheme() {\r\n  const ref = useRef();\r\n  const [btnIcon, setBtnIcon] = useState(\"moon-outline\");\r\n  const [btnText, setBtnText] = useState(\"Dark mode\");\r\n\r\n  function handleChange() {\r\n    if (ref.current.checked) {\r\n      document.body.setAttribute(\"data-theme\", \"dark\");\r\n      setBtnText(\"Light mode\");\r\n      setBtnIcon(\"sunny-outline\");\r\n    } else {\r\n      document.body.removeAttribute(\"data-theme\", \"dark\");\r\n      setBtnText(\"Dark mode\");\r\n      setBtnIcon(\"moon-outline\");\r\n    }\r\n  }\r\n\r\n  function evaluateTheme(mq) {\r\n    if (mq.matches) ref.current.click();\r\n    if (!mq.matches && ref.current.checked) ref.current.click();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const mq = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n    mq.addListener(evaluateTheme);\r\n    evaluateTheme(mq);\r\n  }, []);\r\n\r\n  return (\r\n    <ToggleThemeStyled>\r\n      <ion-icon name={btnIcon}></ion-icon>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"toggle-theme\"\r\n        onChange={handleChange}\r\n        ref={ref}\r\n      />\r\n      <span>{btnText}</span>\r\n    </ToggleThemeStyled>\r\n  );\r\n}\r\n\r\nexport default ToggleTheme;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Wrapper from \"./Wrapper\";\r\nimport ToggleTheme from \"./ToggleTheme\";\r\n\r\nconst HeaderStyled = styled.div`\r\n  background-color: var(--cl-elements);\r\n  box-shadow: 0px 4px 12px 0px hsla(200, 15%, 8%, 0.08);\r\n  padding: 1.5rem 2rem;\r\n\r\n  .header-content {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 1.2rem;\r\n    font-weight: 700;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: var(--cl-text);\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    h1 {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    .header-content {\r\n      padding: 0 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <HeaderStyled>\r\n      <Wrapper>\r\n        <div className=\"header-content\">\r\n          <Link to=\"/\">\r\n            <h1>Where in the world?</h1>\r\n          </Link>\r\n          <ToggleTheme />\r\n        </div>\r\n      </Wrapper>\r\n    </HeaderStyled>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default function formatNumber(num) {\r\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n}\r\n","export default function convertToSlug(Text) {\r\n  return Text.toLowerCase()\r\n    .replace(/ /g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\");\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport formatNumbers from \"./functions/formatNumbers\";\r\nimport stringToSlug from \"./functions/stringToSlug\";\r\n\r\nconst CountryStyled = styled.div`\r\n  border-radius: 0.5rem;\r\n  background-color: var(--cl-elements);\r\n  box-shadow: 0px 4px 12px 0px hsla(200, 15%, 8%, 0.04);\r\n  cursor: pointer;\r\n  transition: 0.3s ease;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 4px 16px 0px hsla(200, 15%, 8%, 0.08);\r\n  }\r\n\r\n  .country-flag {\r\n    overflow: hidden;\r\n    img {\r\n      border-radius: 0.5rem 0.5rem 0 0;\r\n      width: 100%;\r\n      height: 15rem;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n\r\n  .country-info {\r\n    padding: 1.5rem;\r\n    h2 {\r\n      font-size: 1.25rem;\r\n      margin-bottom: 1rem;\r\n      font-weight: 700;\r\n    }\r\n    p {\r\n      margin-bottom: 0.5rem;\r\n\r\n      strong {\r\n        font-weight: 600;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .country-flag {\r\n      img {\r\n        height: 12rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Country({ flag, name, population, region, capital, alpha3Code }) {\r\n  const history = useHistory();\r\n  function handleClick() {\r\n    history.push(`/country/${stringToSlug(name)}/${alpha3Code}`);\r\n  }\r\n  return (\r\n    <CountryStyled onClick={handleClick}>\r\n      <div className=\"country-flag\">\r\n        <img loading=\"lazy\" src={flag} alt={`${name} flag`} />\r\n      </div>\r\n      <div className=\"country-info\">\r\n        <h2>{name}</h2>\r\n        <p>\r\n          <strong>Population:</strong> {`${formatNumbers(population)}`}\r\n        </p>\r\n        <p>\r\n          <strong>Region:</strong> {region}\r\n        </p>\r\n        <p>\r\n          <strong>Capital:</strong> {capital}\r\n        </p>\r\n      </div>\r\n    </CountryStyled>\r\n  );\r\n}\r\n\r\nexport default Country;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Wrapper from \"./Wrapper\";\r\nimport Country from \"./Country\";\r\n\r\nconst CountryListStyled = styled.div`\r\n  padding: 0 4rem;\r\n  display: grid;\r\n  justify-content: flex-start;\r\n  grid-template-columns: repeat(auto-fill, minmax(16rem, 1fr));\r\n  grid-gap: 3rem;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 0 2rem;\r\n  }\r\n`;\r\n\r\nfunction CountryList() {\r\n  const dispatch = useDispatch();\r\n\r\n  const countryList = useSelector((state) => {\r\n    if (state.filterByRegion !== \"\" || state.filterByName !== \"\") {\r\n      return state.coutryFilteredList;\r\n    }\r\n    return state.countryList;\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.eu/rest/v2/all\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((list) => {\r\n        dispatch({\r\n          type: \"SET_COUNTRY_LIST\",\r\n          payload: list,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {/* {countryList.length === 0 && countryList.length} */}\r\n      <CountryListStyled>\r\n        {countryList.map(\r\n          ({ flag, name, population, region, capital, alpha3Code }) => {\r\n            return (\r\n              <Country\r\n                key={alpha3Code}\r\n                flag={flag}\r\n                name={name}\r\n                population={population}\r\n                region={region}\r\n                capital={capital}\r\n                alpha3Code={alpha3Code}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n      </CountryListStyled>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default CountryList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InputStyled = styled.label`\r\n  box-shadow: 0px 4px 12px 0px hsla(200, 15%, 8%, 0.08);\r\n  display: flex;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n  background-color: var(--cl-elements);\r\n\r\n  ion-icon {\r\n    font-size: 1.5rem;\r\n    color: var(--cl-input);\r\n    padding: 0 2rem;\r\n  }\r\n\r\n  input {\r\n    border: none;\r\n    padding: 1.5rem 1rem 1.5rem 0;\r\n    font-family: var(--base-font-family);\r\n    color: var(--cl-input);\r\n    flex: 1;\r\n    background-color: transparent;\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nfunction Input({ ...props }) {\r\n  return (\r\n    <InputStyled>\r\n      <ion-icon name=\"search-outline\"></ion-icon>\r\n      <input type=\"text\" placeholder=\"Search for a country...\" {...props} />\r\n    </InputStyled>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Input from \"./Input\";\r\n\r\nconst SearchStyled = styled.div`\r\n  position: relative;\r\n\r\n  .clear-button {\r\n    position: absolute;\r\n    right: 1rem;\r\n    top: 2.1rem;\r\n    transform: translateY(-50%);\r\n    background-color: transparent;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    padding: 0.5rem;\r\n    transition: 0.3s ease;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    border-radius: 2rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    &:hover {\r\n      background-color: var(--cl-background);\r\n      transform: translateY(-50%) rotate(90deg);\r\n    }\r\n\r\n    ion-icon {\r\n      font-size: 1.5rem;\r\n      color: var(--cl-input);\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 50rem;\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 35rem;\r\n  }\r\n`;\r\n\r\nfunction Search() {\r\n  const [inputValue, setInputValue] = useState(\r\n    useSelector((state) => state.filterByName)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const filterByName = (ev) => {\r\n    setInputValue(ev.target.value);\r\n    dispatch({\r\n      type: \"SET_COUNTRY_BY_NAME\",\r\n      payload: ev.target.value,\r\n    });\r\n  };\r\n\r\n  const clearInput = () => {\r\n    dispatch({\r\n      type: \"SET_COUNTRY_BY_NAME\",\r\n      payload: \"\",\r\n    });\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <SearchStyled>\r\n      {inputValue && (\r\n        <button className=\"clear-button\" onClick={clearInput}>\r\n          <ion-icon name=\"close-outline\"></ion-icon>\r\n        </button>\r\n      )}\r\n      <Input onChange={filterByName} value={inputValue} />\r\n    </SearchStyled>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst FilterRegionStyled = styled.div`\r\n  .dropdown {\r\n    border-radius: 0.5rem;\r\n    background-color: var(--cl-elements);\r\n    box-shadow: 0px 4px 12px 0px hsla(200, 15%, 8%, 0.08);\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n    padding: 1.5rem;\r\n    position: relative;\r\n    color: var(--cl-input);\r\n  }\r\n  .dropdown ion-icon {\r\n    margin-left: 1rem;\r\n    color: var(--cl-input);\r\n    position: absolute;\r\n    top: 1.8rem;\r\n    right: 2rem;\r\n  }\r\n  .dropdown.open ion-icon {\r\n    transform: rotate(180deg);\r\n  }\r\n  .dropdown ul {\r\n    margin-top: 0.5rem;\r\n    border-radius: 0.5rem;\r\n    background-color: var(--cl-elements);\r\n    box-shadow: 0px 4px 12px 0px hsla(200, 15%, 8%, 0.08);\r\n    /* display: none; */\r\n    padding: 0.5rem;\r\n    text-align: left;\r\n    position: absolute;\r\n    top: 0%;\r\n    left: 0;\r\n    list-style-type: none;\r\n    width: 100%;\r\n    z-index: -1;\r\n    opacity: 0;\r\n    height: 0px;\r\n    overflow: hidden;\r\n  }\r\n  .dropdown.open ul {\r\n    /* display: block; */\r\n    opacity: 1;\r\n    top: 100%;\r\n    z-index: 99;\r\n    height: 14.5rem;\r\n  }\r\n  .dropdown ul li {\r\n    margin: 0.25rem 0;\r\n    padding: 0.5rem 1rem;\r\n\r\n    &:hover {\r\n      color: var(--cl-text);\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 20rem;\r\n    margin-left: auto;\r\n  }\r\n`;\r\n\r\nfunction FilterRegion() {\r\n  const dispatch = useDispatch();\r\n  const [dropdown, setDropdown] = useState(false);\r\n  const filterByRegion = useSelector((state) => state.filterByRegion);\r\n\r\n  const onRegionChange = (selectEvent) => {\r\n    dispatch({\r\n      type: \"FILTER_BY_REGION\",\r\n      payload: selectEvent,\r\n    });\r\n  };\r\n\r\n  function filterByRegionAction(ev) {\r\n    const regionSelected = ev.target.value;\r\n    dispatch({\r\n      type: \"FILTER_BY_REGION\",\r\n      payload: regionSelected,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <FilterRegionStyled onChange={filterByRegionAction}>\r\n      <div\r\n        className={`dropdown ${dropdown ? \"open\" : \"\"}`}\r\n        onClick={() => setDropdown(!dropdown)}\r\n      >\r\n        Filter by Region {filterByRegion && `( ${filterByRegion} )`}\r\n        <ion-icon name=\"chevron-down-outline\"></ion-icon>\r\n        <ul>\r\n          <li onClick={() => onRegionChange(\"Africa\")}>Africa</li>\r\n          <li onClick={() => onRegionChange(\"Americas\")}>Americas</li>\r\n          <li onClick={() => onRegionChange(\"Asia\")}>Asia</li>\r\n          <li onClick={() => onRegionChange(\"Europe\")}>Europe</li>\r\n          <li onClick={() => onRegionChange(\"Oceania\")}>Oceania</li>\r\n        </ul>\r\n      </div>\r\n      {/* <option value=\"Africa\">Africa</option>\r\n      <option value=\"Americas\">Americas</option>\r\n      <option value=\"Europe\">Europe</option>\r\n      <option value=\"Asia\">Asia</option>\r\n      <option value=\"Oceania\">Oceania</option> */}\r\n    </FilterRegionStyled>\r\n  );\r\n}\r\n\r\nexport default FilterRegion;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Wrapper from \"./Wrapper\";\r\nimport Search from \"./Search\";\r\nimport FilterRegion from \"./FilterRegion\";\r\n\r\nconst ActionListStyled = styled.div`\r\n  padding: 2rem;\r\n  .grid {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 2rem;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .grid {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ActionList() {\r\n  return (\r\n    <Wrapper>\r\n      <ActionListStyled>\r\n        <div className=\"grid\">\r\n          <Search />\r\n          <FilterRegion />\r\n        </div>\r\n      </ActionListStyled>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default ActionList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonStyled = styled.button`\r\n  padding: 0.75rem 1.5rem;\r\n  box-shadow: 0px 4px 12px 0px hsla(200, 15%, 8%, 0.08);\r\n  border: none;\r\n  background-color: var(--cl-elements);\r\n  border-radius: 0.25rem;\r\n  transition: 0.3s ease;\r\n  text-transform: capitalize;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-family: var(--base-font-family);\r\n  color: var(--cl-text);\r\n\r\n  &:hover {\r\n    background-color: var(--cl-background);\r\n  }\r\n\r\n  ion-icon {\r\n    font-size: 1.2rem;\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nfunction Button({ icon = \"\", text, handleClick }) {\r\n  return (\r\n    <ButtonStyled onClick={handleClick}>\r\n      {icon && <ion-icon name={icon}></ion-icon>}\r\n      {text}\r\n    </ButtonStyled>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport formatNumbers from \"./functions/formatNumbers\";\r\n\r\nimport Button from \"./Button\";\r\n\r\nconst CountrySelectedStyled = styled.div`\r\n  .grid {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 2rem;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  h2 {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  p {\r\n    margin-bottom: 0.75rem;\r\n    strong {\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  h3 {\r\n    font-weight: 600;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  .borders {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    grid-gap: 1rem;\r\n  }\r\n\r\n  img {\r\n    max-width: 100%;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0px 4px 12px 0px hsla(200, 15%, 8%, 0.04);\r\n    margin: 2rem auto;\r\n  }\r\n\r\n  .items {\r\n    span {\r\n      margin-right: 5px;\r\n      &:after {\r\n        content: \",\";\r\n      }\r\n      &:last-child {\r\n        &:after {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 3rem;\r\n    .grid {\r\n      grid-template-columns: 1fr;\r\n    }\r\n    .country-info {\r\n      padding: 2rem 0;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    align-items: center;\r\n    grid-gap: 6rem;\r\n    .grid {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction CountrySelected({\r\n  flag,\r\n  name,\r\n  nativeName,\r\n  population,\r\n  region,\r\n  subregion,\r\n  capital,\r\n  topLevelDomain,\r\n  currencies = [],\r\n  languages = [],\r\n  borders = [],\r\n  alpha3Code,\r\n  handleClick,\r\n}) {\r\n  const countryList = useSelector((state) => state.countryList);\r\n  const [bordersList, setBordersList] = useState([]);\r\n\r\n  function findBorders(countryBordersCodes) {\r\n    if (countryBordersCodes.length === 0) return [];\r\n    const list = countryList.filter((item) =>\r\n      countryBordersCodes.includes(item.alpha3Code)\r\n    );\r\n    return list;\r\n  }\r\n\r\n  function findCountryByName(countryName) {\r\n    if (countryName === \"\") return null;\r\n    const [country] = countryList.filter((item) =>\r\n      item.name.toLowerCase().includes(countryName.toLowerCase())\r\n    );\r\n    return country;\r\n  }\r\n\r\n  function updateCountry(ev) {\r\n    const countrySelected = findCountryByName(ev.target.innerHTML);\r\n    handleClick(countrySelected);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setBordersList(findBorders(borders));\r\n  }, [borders]);\r\n\r\n  return (\r\n    <CountrySelectedStyled>\r\n      <img src={flag} alt={`${name} flag`} />\r\n      <div className=\"country-info\">\r\n        <h2>{name}</h2>\r\n        <div className=\"grid\">\r\n          <div>\r\n            <p>\r\n              <strong>Native Name:</strong> {nativeName}\r\n            </p>\r\n            <p>\r\n              <strong>Population:</strong>{\" \"}\r\n              {`${population ? formatNumbers(population) : population}`}\r\n            </p>\r\n            <p>\r\n              <strong>Region:</strong> {region}\r\n            </p>\r\n            <p>\r\n              <strong>Sub Region:</strong> {subregion}\r\n            </p>\r\n            <p>\r\n              <strong>Capital:</strong> {capital}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <p>\r\n              <strong>Top Level Domain:</strong> {topLevelDomain}\r\n            </p>\r\n            <p className=\"items\">\r\n              <strong>Currencies:</strong>{\" \"}\r\n              {currencies.map((item, index) => (\r\n                <span key={index}>{item.name}</span>\r\n              ))}\r\n            </p>\r\n            <p className=\"items\">\r\n              <strong>Languages:</strong>{\" \"}\r\n              {languages.map((item, index) => (\r\n                <span key={index}>{item.name}</span>\r\n              ))}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {bordersList !== [] && (\r\n          <>\r\n            <h3>Border Countries:</h3>\r\n            <div className=\"borders\">\r\n              {bordersList.map((item, index) => (\r\n                <Button\r\n                  text={item.name}\r\n                  key={index}\r\n                  handleClick={updateCountry}\r\n                  data-item-set={item.alpha3Code}\r\n                />\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </CountrySelectedStyled>\r\n  );\r\n}\r\n\r\nexport default CountrySelected;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Wrapper from \"./Wrapper\";\r\nimport Button from \"./Button\";\r\nimport CountrySelected from \"./CountrySelected\";\r\n\r\nimport stringToSlug from \"./functions/stringToSlug\";\r\n\r\nconst CountryPageStyled = styled.div`\r\n  padding: 2rem;\r\n`;\r\n\r\nfunction CountryPage({ match, history }) {\r\n  const { countryCode } = match.params;\r\n  let DBcountry = useSelector((state) =>\r\n    state.countryList.find((item) => item.alpha3Code === countryCode)\r\n  );\r\n  const [country, setCountry] = useState(DBcountry);\r\n\r\n  useEffect(() => {\r\n    if (!country) {\r\n      fetch(\"https://restcountries.eu/rest/v2/alpha/\" + countryCode)\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((country) => {\r\n          setCountry(country);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [match, countryCode]);\r\n\r\n  function handleClick() {\r\n    history.goBack();\r\n  }\r\n\r\n  function updateCountry(countrySelected) {\r\n    setCountry(countrySelected);\r\n    history.push(\r\n      `/country/${stringToSlug(countrySelected.name)}/${\r\n        countrySelected.alpha3Code\r\n      }`\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <CountryPageStyled>\r\n        <div className=\"navigation\">\r\n          <Button\r\n            handleClick={handleClick}\r\n            icon=\"arrow-back-outline\"\r\n            text=\"back\"\r\n          />\r\n        </div>\r\n        <CountrySelected {...country} handleClick={updateCountry} />\r\n      </CountryPageStyled>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default CountryPage;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport reducer from \"./connections/Reducer\";\n\nimport Header from \"./components/Header\";\nimport CountryList from \"./components/CountryList\";\nimport ActionList from \"./components/ActionList\";\nimport CountryPage from \"./components/CountryPage\";\n\nconst initialState = {\n  countryList: [],\n  coutryFilteredList: [],\n  filterByRegion: \"\",\n  filterByName: \"\",\n};\n\nconst store = createStore(reducer, initialState);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <ActionList />\n              <CountryList />\n            </Route>\n            <Route path=\"/country/:slug/:countryCode\" component={CountryPage} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}