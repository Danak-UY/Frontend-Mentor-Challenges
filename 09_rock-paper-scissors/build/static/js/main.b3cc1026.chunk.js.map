{"version":3,"sources":["components/Wrapper.js","components/Score.js","components/Header.js","components/Token.js","components/TokenPicked.js","components/Button.js","components/Result.js","components/Table.js","functions/evaluateGame.js","components/OverlayRules.js","components/Rules.js","App.js","serviceWorker.js","index.js"],"names":["WrapperStyled","styled","main","Wrapper","children","ScoreStyled","Score","score","useContext","ScoreContext","HeaderStyled","div","Header","shadowAnimation","keyframes","boxAnimation","TokenStyled","button","color","isShadowAnimated","playing","tokenColors","paper","rock","scissors","lizard","spock","Token","name","onClickEvent","onClick","className","src","alt","TokenPickedStyled","TokenPicked","token","title","shadowAnimated","ButtonStyled","WhiteButton","LightButton","Button","props","ResultStyled","Result","handleClick","TableStyled","Table","setScore","useState","setPlaying","looping","setLooping","userPicked","setUserPicked","housePicked","setHousePicked","gameResult","setGameResult","availabeTokens","loopHousePick","Promise","res","rej","loopPick","interval","setInterval","min","max","length","Math","floor","random","getRandomToken","setTimeout","clearInterval","updateStatus","a","housePick","useEffect","gameResultText","console","log","evaluateGame","toLowerCase","includes","localStorage","setItem","OverlayRulesStyled","OverlayRules","RulesStyled","visible","Rules","setVisible","handleToggleClick","createContext","AppStyled","App","getItem","Provider","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b3cc1026.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst WrapperStyled = styled.main`\r\n  max-width: 960px;\r\n  margin: 0 auto;\r\n  align-self: stretch;\r\n  flex: 1;\r\n`;\r\n\r\nfunction Wrapper({ children }) {\r\n  return <WrapperStyled>{children}</WrapperStyled>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ScoreContext } from \"./../App\";\r\n\r\nconst ScoreStyled = styled.main`\r\n  background-color: var(--white);\r\n  text-align: center;\r\n  padding: 0.75rem 2rem;\r\n  border-radius: 0.25rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align:items: center;\r\n  flex-direction: column;\r\n  min-width: 5rem;\r\n\r\n  small {\r\n    color: var(--score-text);\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    margin-bottom: -0.25rem;\r\n  }\r\n\r\n  p {\r\n    color: var(--dark-text);\r\n    font-size: 3rem;\r\n    font-weight: 700\r\n  }\r\n`;\r\n\r\nfunction Score() {\r\n  const { score } = useContext(ScoreContext);\r\n  return (\r\n    <ScoreStyled>\r\n      <small>Score</small>\r\n      <p>{score}</p>\r\n    </ScoreStyled>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Score from \"./Score\";\r\n\r\nconst HeaderStyled = styled.div`\r\n  border: 3px solid var(--header-outline);\r\n  padding: 1.5rem;\r\n  border-radius: 0.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  h1 {\r\n    text-transform: uppercase;\r\n    font-size: 1.25rem;\r\n    line-height: 1rem;\r\n    text-shadow: 0px 0px 8px var(--dark-text);\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    h1 {\r\n      font-size: 1.5em;\r\n      line-height: 1.25rem;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <HeaderStyled>\r\n      <h1>\r\n        Rock <br />\r\n        Paper <br />\r\n        Scissors <br />\r\n        Lizard <br />\r\n        Spock\r\n      </h1>\r\n      <Score />\r\n    </HeaderStyled>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst shadowAnimation = keyframes`\r\n  to {\r\n    box-shadow: \r\n      inset 0px -5px 0px hsla(229, 25%, 31%, 0.12),\r\n      0px 0px 0px 2rem hsla(237, 57%, 56%, .1), \r\n      0px 0px 0px 4rem hsla(237, 57%, 56%, .05), \r\n      0px 0px 0px 6rem hsla(237, 57%, 56%, .025);\r\n    /* transform: rotateZ(360deg) scale(1.1) */\r\n  }\r\n`;\r\n\r\nconst boxAnimation = keyframes`\r\n  to {\r\n    transform: rotateY(-360deg);\r\n  }\r\n`;\r\n\r\nconst TokenStyled = styled.button`\r\n  width: 8rem;\r\n  height: 8rem;\r\n  border-radius: 50%;\r\n  background-color: ${({ color }) => color};\r\n  background-image: ${({ color }) => color};\r\n  display: flex;\r\n  box-shadow: inset 0px -5px 0px hsla(229, 25%, 31%, 0.12),\r\n    0px 0px 0px 0rem hsla(237, 57%, 56%, 0.1),\r\n    0px 0px 0px 0rem hsla(237, 57%, 56%, 0.05),\r\n    0px 0px 0px 0rem hsla(237, 57%, 56%, 0.025);\r\n  padding: 1rem;\r\n  user-select: none;\r\n  border: none;\r\n\r\n  animation: 0.8s\r\n    ${({ isShadowAnimated }) => (isShadowAnimated ? shadowAnimation : \"\")} ease\r\n    forwards;\r\n\r\n  ${({ playing }) =>\r\n    !playing &&\r\n    `    \r\n    cursor: pointer;\r\n\r\n    &:active {\r\n      transform: scale(0.8);\r\n      box-shadow: inset 0px -8px 0px hsla(229, 25%, 31%, 0.12);\r\n\r\n      & .box {\r\n        box-shadow: inset 0px 6px 0px hsla(229, 25%, 31%, 0.12);\r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      box-shadow: inset 0px -5px 0px hsla(229, 25%, 31%, 0.12),\r\n        0px 0px 0px 2rem hsla(237, 57%, 56%, 0.1),\r\n        0px 0px 0px 4rem hsla(237, 57%, 56%, 0.05),\r\n        0px 0px 0px 6rem hsla(237, 57%, 56%, 0.025);\r\n      transform: scale(1.1) rotateZ(20deg);\r\n    }\r\n    `}\r\n\r\n  .box {\r\n    flex: 1;\r\n    align-self: stretch;\r\n    border-radius: 50%;\r\n    box-shadow: inset 0px 4px 0px hsla(229, 25%, 31%, 0.12);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: var(--white);\r\n    padding: 1rem;\r\n  }\r\n\r\n  .box img {\r\n    width: 2.5rem;\r\n    height: auto;\r\n    animation: 0.8s\r\n      ${({ isShadowAnimated }) => (isShadowAnimated ? boxAnimation : \"\")};\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    transform: scale(1.2);\r\n\r\n    ${({ playing }) =>\r\n      playing &&\r\n      `\r\n      width: 12rem;\r\n      height: 12rem;\r\n      padding: 1.2rem;\r\n      box-shadow: inset 0px -10px 0px hsla(229, 25%, 31%, 0.12);\r\n\r\n      .box {\r\n        box-shadow: inset 0px 8px 0px hsla(229, 25%, 31%, 0.12);\r\n      }\r\n\r\n      .box img {\r\n        width: 4rem;\r\n      }\r\n    `}\r\n\r\n    ${({ playing }) =>\r\n      !playing &&\r\n      `      \r\n      &:hover {\r\n        transform: scale(1.3) rotateZ(20deg);\r\n      }\r\n    `}\r\n  }\r\n\r\n  @media screen and (min-width: 960px) {\r\n    transform: scale(1.2);\r\n\r\n    ${({ playing }) =>\r\n      playing &&\r\n      `\r\n      width: 15rem;\r\n      height: 15rem;\r\n      padding: 1.4rem;\r\n\r\n      .box img {\r\n        width: 5rem;\r\n      }\r\n    `}\r\n  }\r\n`;\r\n\r\nconst tokenColors = {\r\n  paper: \"var(--paper-gradient)\",\r\n  rock: \"var(--rock-gradient)\",\r\n  scissors: \"var(--scissors-gradient)\",\r\n  lizard: \"var(--lizard-gradient)\",\r\n  spock: \"var(--cyan-gradient)\",\r\n  \"\": \"hsla(237, 49%, 15%, .2)\",\r\n};\r\n\r\nfunction Token({\r\n  name = \"\",\r\n  onClickEvent,\r\n  isShadowAnimated = false,\r\n  playing = false,\r\n}) {\r\n  function handleClick() {\r\n    if (onClickEvent) onClickEvent(name);\r\n  }\r\n\r\n  return (\r\n    <TokenStyled\r\n      color={tokenColors[name]}\r\n      onClick={handleClick}\r\n      isShadowAnimated={isShadowAnimated}\r\n      playing={playing}\r\n    >\r\n      {name !== \"\" && (\r\n        <div className=\"box\">\r\n          <img src={`./images/icon-${name}.svg`} alt={`${name} Token`} />\r\n        </div>\r\n      )}\r\n    </TokenStyled>\r\n  );\r\n}\r\n\r\nexport default Token;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Token from \"./Token\";\r\n\r\nconst TokenPickedStyled = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  p {\r\n    text-transform: uppercase;\r\n    margin-top: 1rem;\r\n    letter-spacing: 2px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    flex-direction: column-reverse;\r\n\r\n    p {\r\n      font-size: 1.5rem;\r\n      margin-bottom: 3rem;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction TokenPicked({ token, title, shadowAnimated = false }) {\r\n  return (\r\n    <TokenPickedStyled>\r\n      <Token name={token} isShadowAnimated={shadowAnimated} playing={true} />\r\n      <p>{title}</p>\r\n    </TokenPickedStyled>\r\n  );\r\n}\r\n\r\nexport default TokenPicked;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonStyled = styled.button`\r\n  border: 2px solid var(--header-outline);\r\n  border-radius: 0.5rem;\r\n  min-width: 8rem;\r\n  padding: 0.75rem 1rem;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  letter-spacing: 2px;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  font-family: \"Barlow Semi Condensed\", sans-serif;\r\n  background-color: transparent;\r\n  color: var(--white);\r\n\r\n  &:hover {\r\n    background-color: var(--header-outline);\r\n  }\r\n`;\r\n\r\nfunction Button({ children, ...props }) {\r\n  return <ButtonStyled {...props}>{children}</ButtonStyled>;\r\n}\r\n\r\nexport const WhiteButton = styled(ButtonStyled)`\r\n  background-color: var(--white);\r\n  border: 2px solid var(--white);\r\n  color: var(--score-text);\r\n\r\n  &:hover {\r\n    background-color: transparent;\r\n    color: var(--white);\r\n  }\r\n`;\r\n\r\nexport const LightButton = styled(ButtonStyled)`\r\n  background-color: transparent;\r\n  border: 2px solid var(--header-outline);\r\n  color: var(--header-outline);\r\n\r\n  &:hover {\r\n    background-color: var(--header-outline);\r\n    color: var(--white);\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { WhiteButton } from \"./Button\";\r\n\r\nconst ResultStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 2rem 0;\r\n\r\n  p {\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    font-size: 3rem;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 0.75rem;\r\n  }\r\n\r\n  Button {\r\n    min-width: 15rem;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-top: -65vh;\r\n  }\r\n`;\r\n\r\nfunction Result({ title, handleClick }) {\r\n  return (\r\n    <ResultStyled>\r\n      {title !== \"\" && (\r\n        <>\r\n          <p>{title}</p>\r\n          <WhiteButton onClick={handleClick}>Play Again</WhiteButton>\r\n        </>\r\n      )}\r\n    </ResultStyled>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Token from \"./Token\";\r\nimport TokenPicked from \"./TokenPicked\";\r\nimport Result from \"./Result\";\r\n\r\nimport evaluateGame from \"./../functions/evaluateGame\";\r\nimport { ScoreContext } from \"./../App\";\r\n\r\nconst TableStyled = styled.div`\r\n  padding: 2rem 0;\r\n  display: grid;\r\n  grid-gap: 2rem;\r\n  max-width: 25rem;\r\n  width: 100%;\r\n\r\n  &.bg-pentagon {\r\n    background-image: url(\"./images/bg-pentagon.svg\");\r\n    background-position: center center;\r\n    background-size: 18rem;\r\n    background-repeat: no-repeat;\r\n  }\r\n\r\n  &:hover {\r\n    animation-play-state: paused;\r\n  }\r\n\r\n  .in-game {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n  }\r\n\r\n  .out-game {\r\n    padding: 2rem 0;\r\n    display: grid;\r\n    grid-gap: 2rem;\r\n    max-width: 30rem;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-self: center;\r\n\r\n    & .row:nth-child(1) {\r\n      margin-bottom: -3rem;\r\n      display: flex;\r\n      justify-content: center;\r\n      flex: 1;\r\n    }\r\n    & .row:nth-child(2) {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      flex: 1;\r\n    }\r\n    & .row:nth-child(3) {\r\n      display: flex;\r\n      justify-content: center;\r\n      grid-gap: 2rem;\r\n      flex: 1;\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    flex: 1;\r\n    max-width: initial;\r\n\r\n    .in-game {\r\n      justify-content: space-between;\r\n    }\r\n\r\n    &.bg-pentagon {\r\n      background-size: 45vh;\r\n    }\r\n\r\n    .out-game {\r\n      & .row:nth-child(1) {\r\n        margin-bottom: -4rem;\r\n      }\r\n      & .row:nth-child(2) {\r\n        flex: 1;\r\n      }\r\n      & .row:nth-child(3) {\r\n        display: flex;\r\n        grid-gap: 6rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Table() {\r\n  const { score, setScore } = useContext(ScoreContext);\r\n  const [playing, setPlaying] = useState(false);\r\n  const [looping, setLooping] = useState(false);\r\n  const [userPicked, setUserPicked] = useState(\"\");\r\n  const [housePicked, setHousePicked] = useState(\"\");\r\n  const [gameResult, setGameResult] = useState(\"\");\r\n\r\n  function getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n\r\n  const availabeTokens = [\"rock\", \"paper\", \"scissors\", \"lizard\", \"spock\"];\r\n\r\n  function loopHousePick() {\r\n    return new Promise((res, rej) => {\r\n      let loopPick = null;\r\n      const interval = setInterval(() => {\r\n        loopPick = getRandomToken();\r\n        setHousePicked(loopPick);\r\n      }, 75);\r\n      setTimeout(() => {\r\n        clearInterval(interval);\r\n        setLooping(false);\r\n        res(loopPick);\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  function getRandomToken() {\r\n    return availabeTokens[getRandomInt(0, availabeTokens.length)];\r\n  }\r\n\r\n  async function updateStatus(name) {\r\n    setLooping(true);\r\n    setPlaying(true);\r\n    setUserPicked(name);\r\n    const housePick = await loopHousePick();\r\n    setHousePicked(housePick);\r\n  }\r\n\r\n  function handleTryAgainClick() {\r\n    setUserPicked(\"\");\r\n    setHousePicked(\"\");\r\n    setGameResult(\"\");\r\n    setPlaying(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userPicked !== \"\" && housePicked !== \"\" && !looping) {\r\n      const gameResultText = evaluateGame(userPicked, housePicked);\r\n      setGameResult(gameResultText);\r\n      if (gameResultText.toLowerCase().includes(\"win\")) {\r\n        setScore(score + 1);\r\n      }\r\n      if (gameResultText.toLowerCase().includes(\"looser\")) {\r\n        setScore(score - 1);\r\n      }\r\n    }\r\n  }, [looping]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"rpsls_score\", score);\r\n  }, [score]);\r\n\r\n  return (\r\n    <TableStyled className={!playing ? \"bg-pentagon\" : \"\"}>\r\n      {!playing ? (\r\n        <section className=\"out-game\">\r\n          <div className=\"row\">\r\n            <Token name=\"rock\" onClickEvent={updateStatus} />\r\n          </div>\r\n          <div className=\"row\">\r\n            <Token name=\"spock\" onClickEvent={updateStatus} />\r\n            <Token name=\"paper\" onClickEvent={updateStatus} />\r\n          </div>\r\n          <div className=\"row\">\r\n            <Token name=\"lizard\" onClickEvent={updateStatus} />\r\n            <Token name=\"scissors\" onClickEvent={updateStatus} />\r\n          </div>\r\n        </section>\r\n      ) : (\r\n        <>\r\n          <section className=\"in-game\">\r\n            <TokenPicked\r\n              token={userPicked}\r\n              title=\"you picked\"\r\n              shadowAnimated={gameResult.toLowerCase().includes(\"win\")}\r\n            />\r\n            <TokenPicked\r\n              token={housePicked}\r\n              title=\"the house picked\"\r\n              shadowAnimated={gameResult.toLowerCase().includes(\"looser\")}\r\n            />\r\n          </section>\r\n          <Result title={gameResult} handleClick={handleTryAgainClick} />\r\n        </>\r\n      )}\r\n    </TableStyled>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","export default function evaluateGame(userPicked, housePicked) {\r\n  console.log({ userPicked, housePicked });\r\n  if (userPicked === \"\" || !housePicked === \"\") return;\r\n  if (userPicked === housePicked) return \"It's a draw!\";\r\n  switch (userPicked) {\r\n    case \"rock\":\r\n      if (housePicked === \"scissors\" || housePicked === \"lizard\")\r\n        return \"You win\";\r\n      return \"Looser\";\r\n    case \"paper\":\r\n      if (housePicked === \"rock\" || housePicked === \"spock\") return \"You win\";\r\n      return \"Looser\";\r\n    case \"scissors\":\r\n      if (housePicked === \"paper\" || housePicked === \"lizard\") return \"You win\";\r\n      return \"Looser\";\r\n    case \"lizard\":\r\n      if (housePicked === \"spock\" || housePicked === \"paper\") return \"You win\";\r\n      return \"Looser\";\r\n    case \"spock\":\r\n      if (housePicked === \"scissors\" || housePicked === \"rock\")\r\n        return \"You win\";\r\n      return \"Looser\";\r\n    default:\r\n      return \"No case\";\r\n  }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { LightButton } from \"./Button\";\r\nimport { ScoreContext } from \"./../App\";\r\n\r\nconst OverlayRulesStyled = styled.div`\r\n  background-color: var(--white);\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 5;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  padding: 5rem 0;\r\n  transition: 0.8s ease;\r\n\r\n  h2 {\r\n    color: var(--dark-text);\r\n    text-transform: uppercase;\r\n    font-size: 2.5rem;\r\n  }\r\n\r\n  .close-button {\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    padding: 0.75rem;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    &:hover {\r\n      background-color: #e1e4ed;\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    top: 50%;\r\n    left: 50%;\r\n    right: initial;\r\n    bottom: initial;\r\n    width: auto;\r\n    height: auto;\r\n    padding: 2rem;\r\n    transform: translate(-50%, -50%);\r\n    border-radius: 0.5rem;\r\n\r\n    h2 {\r\n      margin-bottom: 1rem;\r\n      font-size: 2rem;\r\n      align-self: flex-start;\r\n    }\r\n\r\n    .reset-button {\r\n      margin-top: 2rem;\r\n    }\r\n\r\n    .close-button {\r\n      position: absolute;\r\n      top: 2rem;\r\n      right: 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction OverlayRules({ handleClick }) {\r\n  const { score, setScore } = useContext(ScoreContext);\r\n\r\n  function resetScore() {\r\n    setScore(0);\r\n    handleClick();\r\n  }\r\n\r\n  return (\r\n    <OverlayRulesStyled>\r\n      <h2>Rules</h2>\r\n      <img src=\"./images/image-rules-bonus.svg\" alt=\"Game Rules\" />\r\n      <LightButton className=\"reset-button\" onClick={resetScore}>\r\n        Reset Score\r\n      </LightButton>\r\n      <button className=\"close-button\" onClick={handleClick}>\r\n        <img src=\"./images/icon-close.svg\" alt=\"Close Icon\" />\r\n      </button>\r\n    </OverlayRulesStyled>\r\n  );\r\n}\r\n\r\nexport default OverlayRules;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Button from \"./Button\";\r\nimport OverlayRules from \"./OverlayRules\";\r\n\r\nconst RulesStyled = styled.div`\r\n  padding: 2rem 0;\r\n\r\n  .rules-overlay {\r\n    background-color: var(--white);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 5;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    padding: 5rem 0;\r\n\r\n    h2 {\r\n      color: var(--dark-text);\r\n      text-transform: uppercase;\r\n      font-size: 2.5rem;\r\n    }\r\n\r\n    .close-button {\r\n      background-color: transparent;\r\n      border: none;\r\n      cursor: pointer;\r\n      padding: 0.75rem;\r\n      border-radius: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      &:hover {\r\n        background-color: #e1e4ed;\r\n        transform: rotate(90deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  &::before {\r\n    display: ${({ visible }) => (visible === true ? \"block\" : \"none\")};\r\n    content: \"\";\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: hsl(237, 49%, 15%);\r\n    opacity: 0.8;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    position: absolute;\r\n    bottom: 2rem;\r\n    right: 2rem;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nfunction Rules() {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  function handleToggleClick() {\r\n    setVisible(!visible);\r\n  }\r\n\r\n  return (\r\n    <RulesStyled visible={visible}>\r\n      {visible && <OverlayRules handleClick={handleToggleClick} />}\r\n      <Button onClick={handleToggleClick}>Rules</Button>\r\n    </RulesStyled>\r\n  );\r\n}\r\n\r\nexport default Rules;\r\n","import React, { useState, createContext } from \"react\";\n\nimport \"./App.css\";\nimport styled from \"styled-components\";\n\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport Table from \"./components/Table\";\nimport Rules from \"./components/Rules\";\n\nexport const ScoreContext = createContext();\n\nconst AppStyled = styled.main`\n  background-image: var(--radial-gradient);\n  min-height: 100vh;\n  padding: 2rem;\n  display: flex;\n\n  .app-content {\n    min-height: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: column;\n  }\n`;\n\nfunction App() {\n  const [score, setScore] = useState(localStorage.getItem(\"rpsls_score\") || 0);\n  return (\n    <ScoreContext.Provider value={{ score, setScore }}>\n      <AppStyled>\n        <Wrapper>\n          <div className=\"app-content\">\n            <Header />\n            <Table />\n            <Rules />\n          </div>\n        </Wrapper>\n      </AppStyled>\n    </ScoreContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}